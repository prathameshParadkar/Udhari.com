[{"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\MainScreen.js":"1","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace.js":"2","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\MainListTile.js":"3","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\ManageUdhariWS.js":"4","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\AddUdhariWS.js":"5","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\RemoveUdhari.js":"6","C:\\Users\\majes\\Downloads\\udhari\\src\\index.js":"7","C:\\Users\\majes\\Downloads\\udhari\\src\\reportWebVitals.js":"8","C:\\Users\\majes\\Downloads\\udhari\\src\\App.js":"9","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Login.js":"10","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Register.js":"11","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Navbar.js":"12","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\AmountChangeWS.js":"13"},{"size":5830,"mtime":1661693665438,"results":"14","hashOfConfig":"15"},{"size":3083,"mtime":1661693635919,"results":"16","hashOfConfig":"15"},{"size":1963,"mtime":1661693725170,"results":"17","hashOfConfig":"15"},{"size":3450,"mtime":1661693323151,"results":"18","hashOfConfig":"15"},{"size":5971,"mtime":1661693323150,"results":"19","hashOfConfig":"15"},{"size":589,"mtime":1661693323152,"results":"20","hashOfConfig":"15"},{"size":535,"mtime":1661346847973,"results":"21","hashOfConfig":"15"},{"size":362,"mtime":1661346847995,"results":"22","hashOfConfig":"15"},{"size":1199,"mtime":1661624052378,"results":"23","hashOfConfig":"15"},{"size":1848,"mtime":1661620266871,"results":"24","hashOfConfig":"15"},{"size":2832,"mtime":1661620266877,"results":"25","hashOfConfig":"15"},{"size":740,"mtime":1661620266876,"results":"26","hashOfConfig":"15"},{"size":1016,"mtime":1661632130099,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"sqjwsr",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\MainScreen.js",["70"],[],"import React, {useState, useEffect} from 'react'\r\n// import MainList from './MainList'\r\nimport Navbar from './Navbar'\r\nimport Workspace from './Workspace'\r\nimport Axios from 'axios';\r\nimport MainListTile from './MainListTile'\r\nimport Img from './images/profile-pic.png'\r\n\r\nexport default function MainScreen(props) {\r\n  const [isManagerOn, setIsManagerOn] = useState(false)\r\n  const [entries, setEntries] = useState([]);\r\n  const [filtered, setFilteredEntry] = useState(entries);\r\n\r\n  const [activeDiv, setActiveDiv] = useState(1);\r\n  \r\n\r\n  const [isDivClose, setIsDivClose] = useState(false)\r\n  const [isAdded, setIsAdded] = React.useState(true);\r\n\r\n\r\n  //responsive for mobile...->\r\n  const [isResponsive, setIsResponsive] = useState(false);\r\n  const [isResponsiveNavbarOn, setIsResponsiveNavbarOn] = useState(false);\r\n  const [isResponsiveMainListOn, setIsResponsiveMainListOn] = useState(false);\r\n  const [isResponsiveWorkspaceOn, setIsResponsiveWorkspaceOn] = useState(false);\r\n  \r\n  window.onresize = function() {\r\n    if (window.innerWidth <= 820){\r\n      setIsResponsive(true);\r\n      setIsResponsiveMainListOn(true);\r\n    }\r\n    else{\r\n      setIsResponsive(false);\r\n      setIsResponsiveMainListOn(false);\r\n      setIsResponsiveNavbarOn(false);\r\n      setIsResponsiveWorkspaceOn(false);\r\n    }\r\n  }\r\n  function toResponsiveNavbar(){\r\n    setIsResponsiveMainListOn(false);\r\n    setIsResponsiveNavbarOn(true);\r\n\r\n  }\r\n\r\n  function toManageUdhariWS(feeback){\r\n    setIsManagerOn(feeback)\r\n  }\r\n\r\n  const updateEntry = (newEntry) => {\r\n    setEntries([...entries, newEntry]);\r\n    setFilteredEntry([...filtered, newEntry]);\r\n  }\r\n  const manageEntry = (newEntry, name) => {\r\n    const editedEntries = filtered.map(item => {\r\n      if(item.name === name){\r\n        return newEntry;\r\n      }else {\r\n        return item;\r\n      }\r\n    });\r\n    setEntries(editedEntries);\r\n    setFilteredEntry(editedEntries);\r\n  }\r\n  const removeEntry = (name) => {\r\n    let newEntries = filtered.filter(item => {return item.name !== name})\r\n    setEntries(newEntries);\r\n    setFilteredEntry(newEntries);\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:3001/${props.username}`)\r\n      .then(res => {\r\n        // console.log(res.data.entries);\r\n        setEntries(res.data.entries);\r\n        setFilteredEntry(res.data.entries);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      })\r\n  }, []);\r\n\r\n  const searchUdhari = (e) => {\r\n    let query = e.target.value;\r\n    let result = entries.filter((data) => {\r\n      return data.name.search(query) !== -1;\r\n    });\r\n    setEntries(result);\r\n    if(!query){\r\n      setEntries(filtered);\r\n    }\r\n  } \r\n  function toAddUdhariWS(){\r\n    setIsAdded(false)\r\n    setIsResponsiveMainListOn(false)\r\n    setIsResponsiveWorkspaceOn(true)\r\n  } \r\n\r\n  return (\r\n    <div className='mainscreen-container'>\r\n    \r\n    \r\n    { ((isResponsiveNavbarOn) || !isResponsive)  &&  <Navbar isLoggedIn={props.isLoggedIn} username={props.username} isResponsiveNavbarOn = {isResponsiveNavbarOn} responsiveNavbarHandler ={setIsResponsiveNavbarOn} responsiveMainListHandler ={setIsResponsiveMainListOn} />}\r\n    \r\n    \r\n    {((isResponsiveMainListOn) || !isResponsive) && \r\n    (<div className='mainlist'>\r\n    {isResponsive && \r\n    <>\r\n    <span onClick={toResponsiveNavbar} className=\"material-symbols-outlined nav-menu-button\"> menu</span>\r\n    <div className='mainlist-search-addUdhari-box'>\r\n    <input type=\"text\" name=\"search\" className='mainlist-search' placeholder='Search' onChange={searchUdhari}/>\r\n    \r\n    <button className='workspace-addUdhari' onClick = {toAddUdhariWS} id='mainlist-addUdhari'>Add Udhari</button>\r\n    \r\n    </div>\r\n    </>\r\n    }\r\n    {!isResponsive && \r\n    <div className='mainlist-search-box'>\r\n    <input type=\"text\" name=\"search\" className='mainlist-search' placeholder='Search' onChange={searchUdhari}/> \r\n    </div>\r\n    }\r\n        <div className='mainlist-list'>\r\n          {entries && entries.length > 0 ? entries.map((item) => {\r\n                  return (\r\n                    <>\r\n                <MainListTile\r\n                      key = {item._id}\r\n                      id={item._id}\r\n                      img={Img}\r\n                      name={item.name}\r\n                      UdhariStatus = {item.udhari.status}\r\n                      UdhariAmount = {item.udhari.amount}\r\n                      managerHandler = {toManageUdhariWS}\r\n                      manageActiveDiv = {setActiveDiv}\r\n                      activeDiv={activeDiv}\r\n             \r\n                      isDivClose = {isDivClose}\r\n                      divCloseHandler = {setIsDivClose}\r\n                      isResponsive = {isResponsive}\r\n                      responsiveMainListHandler = {setIsResponsiveMainListOn}\r\n                      responsiveWorkspaceHandler = {setIsResponsiveWorkspaceOn}\r\n                      /> \r\n                  </>\r\n                    )}) : <h1>No entries found. Please Add Udhari.</h1>}\r\n    </div>\r\n    </div>)}\r\n  { ((isResponsiveWorkspaceOn) || !isResponsive) && \r\n        <Workspace  \r\n          managerStatus={isManagerOn} \r\n          managerStatusHandler={toManageUdhariWS} \r\n          isManagerOn={isManagerOn} \r\n          username={props.username} \r\n          updateEntry={updateEntry} \r\n          entries={entries} \r\n          activeDiv = {activeDiv}  \r\n          divCloseHandler = {setIsDivClose}       \r\n          removeEntry={removeEntry}\r\n\r\n          manageEntry={manageEntry}\r\n\r\n          \r\n          isResponsive = {isResponsive}\r\n          responsiveWorkspaceHandler = {setIsResponsiveWorkspaceOn}\r\n          responsiveMainListHandler = {setIsResponsiveMainListOn}\r\n          isAdded = {isAdded}\r\n          isAddedHandler = {setIsAdded}\r\n\r\n         />}    \r\n      </div>\r\n  )\r\n}\r\n\r\n//key = {item._id + \"key\"} \r\n// name = {item.name}","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\MainListTile.js",["71"],[],"import React from 'react'\r\nimport profileImg from './images/profile-pic.png'\r\n\r\nexport default function MainListTile(props) {\r\n  const [divStyle, setDivStyle] = React.useState({})\r\n  const [isDivOn, setIsDivOn] = React.useState(false)\r\n  let UdhariColor = props.UdhariStatus === \"Udhari_to_pay\" ? \"#EE6055\" : \"#60D394\";\r\n  let UdhariType = props.UdhariStatus === \"Udhari_to_pay\" ? \"pay Udhari\" : \"get Udhari\";\r\n  const UdhariStyle = {\r\n    color : `${UdhariColor}`\r\n  }\r\n\r\n  let selectionDivStyle = {\r\n    backgroundColor : \"#F8F8F8\",\r\n    borderLeft : 3,\r\n    borderLeftStyle : \"solid\",\r\n    borderLeftColor : `${UdhariColor}`,\r\n  }\r\n\r\n  function divClicked(){\r\n      if(!props.isResponsive){\r\n\r\n        setDivStyle((prevState) => {\r\n          return(\r\n            Object.keys(prevState).length === 0 ? selectionDivStyle : {} \r\n            );\r\n          }\r\n          )\r\n      }\r\n      else{\r\n        props.responsiveMainListHandler(false)\r\n        props.responsiveWorkspaceHandler(true)\r\n      }\r\n          setIsDivOn(true)\r\n        props.manageActiveDiv(props.id)\r\n        Object.keys(divStyle).length === 0 ? props.managerHandler(true) :  props.managerHandler(false)\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n    if (props.isDivClose || isDivOn){\r\n      setDivStyle((prevState) => {\r\n        return(\r\n           {} \r\n          );\r\n        } \r\n      )\r\n      props.divCloseHandler(false)\r\n    }\r\n  }, [props.isDivClose])\r\n\r\n  return (\r\n    <div className='list-tile' onClick={divClicked} style={divStyle} >\r\n        <img src={profileImg} alt=\"img\" className='list-tile-img'  />\r\n        <p className='list-tile-name' style={UdhariStyle}> {props.name}\r\n        <span style={{\r\n          // borderColor : `${UdhariColor}` , \r\n          // backgroundColor : `${UdhariColor}`,\r\n          color : \"#ABABAB\"\r\n        }}>#{UdhariType}</span>\r\n        </p>\r\n        <p className='list-tile-Udhari' style={UdhariStyle}>&#8377; {props.UdhariAmount}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\ManageUdhariWS.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\AddUdhariWS.js",["72"],[],"import React, {useEffect, useState} from 'react'\r\nimport profileImg from './profile-pic.png'\r\nimport Axios from 'axios';\r\nimport AmountChangeWS from './AmountChangeWS';\r\n\r\nexport default function AddUdhariWS(props) {\r\n    const [amount, setAmount] = useState(0);\r\n    // const [status, setStatus] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [upi_id, setUpi_id] = useState(\"\");\r\n\r\n    const updateAmount = (newAmount) => {\r\n        setAmount(newAmount);\r\n    }\r\n\r\n    const MoneyReceived = (e) => {\r\n        e.preventDefault()\r\n        // setStatus(\"Udhari_to_pay\");\r\n        props.addStatusHandler(prevState => !prevState)\r\n            Axios.put(`http://localhost:3001/${props.username}/udhari_to_pay`, {username, contact, email, upi_id, amount})\r\n                .then(res => {     \r\n                    if(typeof res.data === 'object' && res.data !== null){\r\n                        // const {status, amount} = res.data[0].udhari;\r\n                        // const {name, upi_id, _id} = res.data[0];\r\n                        // const {contact, email} = res.data[0].personalDetails;\r\n                        props.updateEntry({_id: res.data[0]._id, name: username, upi_id, personalDetails: {email, contact}, udhari: {status: 'Udhari_to_pay', amount}});\r\n                        // console.log({_id, name, upi_id, personalDetails: {email, contact}, udhari: {status, amount}})\r\n                    }\r\n                    else {\r\n                        alert(`Error: ${res.data}`);\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                })\r\n        \r\n    }\r\n\r\n    const MoneyPayed = (e) => {\r\n        e.preventDefault()\r\n        // setStatus(\"Udhari_to_get\")\r\n        props.addStatusHandler(prevState => !prevState)\r\n            Axios.put(`http://localhost:3001/${props.username}/udhari_to_get`, {username, contact, email, upi_id, amount})\r\n            .then(res => {\r\n                if(typeof res.data === 'object' && res.data !== null){\r\n                        // const {status, amount} = res.data[0].udhari;\r\n                        // const {name, upi_id, _id} = res.data[0];\r\n                        // const {contact, email} = res.data[0].personalDetails;\r\n                        props.updateEntry({_id: res.data[0]._id, name: username, upi_id, personalDetails: {email, contact}, udhari: {status: \"Udhari_to_get\", amount}});\r\n                }\r\n                else {\r\n                    alert(`Error: ${res.data}`);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n\r\n    }\r\n\r\n    function UdhariClose(){\r\n        props.toResponsiveMainScreen()\r\n        if(props.isResponsive){\r\n            setTimeout(() => {\r\n                props.addStatusHandler()\r\n            }, 250)\r\n          }\r\n          else{\r\n            props.addStatusHandler()\r\n          }\r\n        \r\n    }\r\n\r\n    const findUser = (username) => {\r\n        Axios.get(`http://localhost:3001/${username}`)\r\n            .then(res => {\r\n                if(res.data){\r\n                    // alert(\"user found\");\r\n                    // console.log(res.data);\r\n                    const {username, upi_id, contact, email} = res.data;\r\n                    // console.log({username, upi_id, contact, email});\r\n                    setContact(contact);\r\n                    setEmail(email);\r\n                    setUpi_id(upi_id);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timeOutId = setTimeout(() => {\r\n            if(username){\r\n                // alert(\"calling function\");\r\n            findUser(username);\r\n        }}, 1000);\r\n        return () => clearTimeout(timeOutId);\r\n    }, [username])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        {!props.isResponsive && <button className='add-Udhari-close' onClick={UdhariClose}>&#xd7;</button>}  \r\n        {props.isResponsive && <span className=\"material-symbols-outlined add-Udhari-close\" onClick={UdhariClose}>chevron_right</span> }\r\n        \r\n        <div className='add-Udhari-box'>\r\n            <img className='add-Udhari-img' src={profileImg} alt=\"\" />\r\n            <form className='add-Udhari-form' action=\"/ManageUdhariWS\">\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Name   </label>\r\n                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" onChange={e => {setUsername(e.target.value)}} value={username} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Contact</label>\r\n                <input type=\"tel\" className=\"form-control\" id=\"exampleFormControlInput2\"  onChange={e => {setContact(e.target.value)}} value={contact  || \"\"} />\r\n            </div>  \r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"exampleFormControlInput3\" className=\"form-label\">Email  </label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput3\" onChange={e => {setEmail(e.target.value)}} value={email || \"\"}/>\r\n            </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlInput4\" className=\"form-label\">UPI id </label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput4\" onChange={e => {setUpi_id(e.target.value)}} value={upi_id || \"\"} required/>\r\n                </div>\r\n            </form>\r\n            <div className='add-Udhari-amount-change-box'>\r\n                <AmountChangeWS updateAmount={updateAmount} receiveHandler={MoneyReceived} payedHandler={MoneyPayed} />\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\RemoveUdhari.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\index.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\reportWebVitals.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\App.js",["73"],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Login.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Register.js",["74"],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Navbar.js",[],[],"C:\\Users\\majes\\Downloads\\udhari\\src\\components\\Workspace Components\\AmountChangeWS.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":80,"column":6,"nodeType":"77","endLine":80,"endColumn":8,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":49,"column":6,"nodeType":"77","endLine":49,"endColumn":24,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":82,"column":28,"nodeType":"83","messageId":"84","endLine":82,"endColumn":36},{"ruleId":"81","severity":1,"message":"85","line":3,"column":40,"nodeType":"83","messageId":"84","endLine":3,"endColumn":44},{"ruleId":"81","severity":1,"message":"86","line":13,"column":10,"nodeType":"83","messageId":"84","endLine":13,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.username'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook React.useEffect has missing dependencies: 'isDivOn' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["88"],"no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'errors' is assigned a value but never used.",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [props.username]",{"range":"93","text":"94"},"Update the dependencies array to be: [isDivOn, props, props.isDivClose]",{"range":"95","text":"96"},[2398,2400],"[props.username]",[1398,1416],"[isDivOn, props, props.isDivClose]"]